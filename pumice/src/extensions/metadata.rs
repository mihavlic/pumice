use std::ffi::CStr;

pub struct ExtensionMetadata {
    pub name: &'static CStr,
    /// true - instance, false - device
    pub instance: bool,
    pub core_version: u32,
    pub requires_extensions: &'static [&'static CStr],
}

pub fn get_metadata(name: &CStr) -> Option<&'static ExtensionMetadata> {
    let index = EXTENSION_METADATA
        .binary_search_by_key(&name, |m| &m.name)
        .ok()?;
    Some(&EXTENSION_METADATA[index])
}

// CODEGEN START

pub const EXTENSION_METADATA: &[ExtensionMetadata] = &[
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_buffer_marker"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_device_coherent_memory"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_display_native_hdr"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_get_surface_capabilities2"),
            crate::cstr!("VK_KHR_swapchain"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_draw_indirect_count"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_gcn_shader"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_gpu_shader_half_float"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_gpu_shader_int16"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_memory_overallocation_behavior"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_mixed_attachment_samples"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_negative_viewport_height"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_pipeline_compiler_control"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_rasterization_order"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_ballot"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_core_properties"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_core_properties2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_AMD_shader_core_properties")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_early_and_late_fragment_tests"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_explicit_vertex_parameter"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_fragment_mask"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_image_load_store_lod"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_info"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_shader_trinary_minmax"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_AMD_texture_gather_bias_lod"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_ANDROID_external_memory_android_hardware_buffer"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_sampler_ycbcr_conversion"),
            crate::cstr!("VK_KHR_external_memory"),
            crate::cstr!("VK_EXT_queue_family_foreign"),
            crate::cstr!("VK_KHR_dedicated_allocation"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_ARM_rasterization_order_attachment_access"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_4444_formats"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_acquire_drm_display"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_direct_mode_display")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_acquire_xlib_display"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_direct_mode_display")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_astc_decode_mode"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_attachment_feedback_loop_layout"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_blend_operation_advanced"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_border_color_swizzle"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_custom_border_color")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_buffer_device_address"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_calibrated_timestamps"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_color_write_enable"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_conditional_rendering"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_conservative_rasterization"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_custom_border_color"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_debug_marker"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_debug_report")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_debug_report"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_debug_utils"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_depth_clamp_zero_one"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_depth_clip_control"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_depth_clip_enable"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_depth_range_unrestricted"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_descriptor_indexing"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_maintenance3"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_device_address_binding_report"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_EXT_debug_utils"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_device_fault"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_device_memory_report"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_direct_mode_display"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_display")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_directfb_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_discard_rectangles"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_display_control"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_EXT_display_surface_counter"),
            crate::cstr!("VK_KHR_swapchain"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_display_surface_counter"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_display")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_extended_dynamic_state"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_extended_dynamic_state2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_extended_dynamic_state3"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_external_memory_dma_buf"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory_fd")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_external_memory_host"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_filter_cubic"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_fragment_density_map"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_fragment_density_map2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_fragment_density_map")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_fragment_shader_interlock"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_full_screen_exclusive"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_surface"),
            crate::cstr!("VK_KHR_get_surface_capabilities2"),
            crate::cstr!("VK_KHR_swapchain"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_global_priority"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_global_priority_query"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_EXT_global_priority"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_graphics_pipeline_library"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_pipeline_library"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_hdr_metadata"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_swapchain")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_headless_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_host_query_reset"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_image_2d_view_of_3d"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_maintenance1"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_image_compression_control"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_image_compression_control_swapchain"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_image_compression_control")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_image_drm_format_modifier"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_bind_memory2"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_image_format_list"),
            crate::cstr!("VK_KHR_sampler_ycbcr_conversion"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_image_robustness"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_image_view_min_lod"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_index_type_uint8"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_inline_uniform_block"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_maintenance1"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_legacy_dithering"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_line_rasterization"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_load_store_op_none"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_memory_budget"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_memory_priority"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_mesh_shader"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_spirv_1_4"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_metal_objects"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_metal_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_multi_draw"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_multisampled_render_to_single_sampled"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_create_renderpass2"),
            crate::cstr!("VK_KHR_depth_stencil_resolve"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_mutable_descriptor_type"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_maintenance3")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_non_seamless_cube_map"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_opacity_micromap"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_acceleration_structure"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pageable_device_local_memory"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_memory_priority")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pci_bus_info"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_physical_device_drm"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pipeline_creation_cache_control"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pipeline_creation_feedback"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pipeline_properties"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pipeline_protected_access"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_pipeline_robustness"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_post_depth_coverage"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_primitive_topology_list_restart"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_primitives_generated_query"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_transform_feedback")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_private_data"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_provoking_vertex"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_queue_family_foreign"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_rasterization_order_attachment_access"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_rgba10x6_formats"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_sampler_ycbcr_conversion")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_robustness2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_sample_locations"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_sampler_filter_minmax"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_scalar_block_layout"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_separate_stencil_usage"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_atomic_float"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_atomic_float2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_shader_atomic_float")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_demote_to_helper_invocation"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_image_atomic_int64"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_module_identifier"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_EXT_pipeline_creation_cache_control"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_stencil_export"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_subgroup_ballot"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_subgroup_vote"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_shader_viewport_index_layer"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_subgroup_size_control"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_subpass_merge_feedback"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_swapchain_colorspace"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_texel_buffer_alignment"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_texture_compression_astc_hdr"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_tooling_info"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_transform_feedback"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_validation_cache"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_validation_features"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_validation_flags"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_vertex_attribute_divisor"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_vertex_input_dynamic_state"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_video_decode_h264"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_video_decode_queue")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_video_decode_h265"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_video_decode_queue")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_video_encode_h264"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_video_encode_queue")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_video_encode_h265"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_video_encode_queue")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_ycbcr_2plane_444_formats"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_sampler_ycbcr_conversion")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_EXT_ycbcr_image_arrays"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_sampler_ycbcr_conversion")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_FUCHSIA_buffer_collection"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_FUCHSIA_external_memory"),
            crate::cstr!("VK_KHR_sampler_ycbcr_conversion"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_FUCHSIA_external_memory"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_external_memory_capabilities"),
            crate::cstr!("VK_KHR_external_memory"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_FUCHSIA_external_semaphore"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_external_semaphore_capabilities"),
            crate::cstr!("VK_KHR_external_semaphore"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_FUCHSIA_imagepipe_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GGP_frame_token"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_GGP_stream_descriptor_surface"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GGP_stream_descriptor_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GOOGLE_decorate_string"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GOOGLE_display_timing"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_swapchain")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GOOGLE_hlsl_functionality1"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GOOGLE_surfaceless_query"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_GOOGLE_user_type"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_HUAWEI_invocation_mask"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_ray_tracing_pipeline"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_HUAWEI_subpass_shading"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_create_renderpass2"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_IMG_filter_cubic"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_IMG_format_pvrtc"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_INTEL_performance_query"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_INTEL_shader_integer_functions2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_16bit_storage"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_storage_buffer_storage_class"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_8bit_storage"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_storage_buffer_storage_class"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_acceleration_structure"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[
            crate::cstr!("VK_EXT_descriptor_indexing"),
            crate::cstr!("VK_KHR_buffer_device_address"),
            crate::cstr!("VK_KHR_deferred_host_operations"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_android_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_bind_memory2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_buffer_device_address"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_copy_commands2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_create_renderpass2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_multiview"),
            crate::cstr!("VK_KHR_maintenance2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_dedicated_allocation"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_memory_requirements2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_deferred_host_operations"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_depth_stencil_resolve"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_create_renderpass2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_descriptor_update_template"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_device_group"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_device_group_creation")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_device_group_creation"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_display"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_display_swapchain"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_KHR_display"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_draw_indirect_count"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_driver_properties"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_dynamic_rendering"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_depth_stencil_resolve"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_fence"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_fence_capabilities")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_fence_capabilities"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_fence_fd"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_fence")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_fence_win32"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_fence")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_memory"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory_capabilities")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_memory_capabilities"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_memory_fd"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_memory_win32"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_semaphore"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_semaphore_capabilities")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_semaphore_capabilities"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_semaphore_fd"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_semaphore")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_external_semaphore_win32"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_semaphore")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_format_feature_flags2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_fragment_shader_barycentric"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_fragment_shading_rate"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_create_renderpass2"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_get_display_properties2"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_display")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_get_memory_requirements2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_get_physical_device_properties2"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_get_surface_capabilities2"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_global_priority"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_image_format_list"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_imageless_framebuffer"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_maintenance2"),
            crate::cstr!("VK_KHR_image_format_list"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_incremental_present"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_swapchain")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_maintenance1"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_maintenance2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_maintenance3"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_maintenance4"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_multiview"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_performance_query"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_pipeline_executable_properties"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_pipeline_library"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_portability_enumeration"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_portability_subset"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_present_id"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_swapchain")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_present_wait"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_KHR_present_id"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_push_descriptor"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_ray_query"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[
            crate::cstr!("VK_KHR_spirv_1_4"),
            crate::cstr!("VK_KHR_acceleration_structure"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_ray_tracing_maintenance1"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[crate::cstr!("VK_KHR_acceleration_structure")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_ray_tracing_pipeline"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[
            crate::cstr!("VK_KHR_spirv_1_4"),
            crate::cstr!("VK_KHR_acceleration_structure"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_relaxed_block_layout"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_sampler_mirror_clamp_to_edge"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_sampler_ycbcr_conversion"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_maintenance1"),
            crate::cstr!("VK_KHR_bind_memory2"),
            crate::cstr!("VK_KHR_get_memory_requirements2"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_separate_depth_stencil_layouts"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_create_renderpass2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_atomic_int64"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_clock"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_draw_parameters"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_float16_int8"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_float_controls"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_integer_dot_product"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_non_semantic_info"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_subgroup_extended_types"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_subgroup_uniform_control_flow"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shader_terminate_invocation"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_shared_presentable_image"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_get_surface_capabilities2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_spirv_1_4"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[crate::cstr!("VK_KHR_shader_float_controls")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_storage_buffer_storage_class"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_surface_protected_capabilities"),
        instance: true,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[crate::cstr!("VK_KHR_get_surface_capabilities2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_swapchain"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_swapchain_mutable_format"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_KHR_maintenance2"),
            crate::cstr!("VK_KHR_image_format_list"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_synchronization2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_timeline_semaphore"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_uniform_buffer_standard_layout"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_variable_pointers"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_storage_buffer_storage_class"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_video_decode_queue"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_video_queue"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_video_encode_queue"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_video_queue"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_video_queue"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_vulkan_memory_model"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_wayland_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_win32_keyed_mutex"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory_win32")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_win32_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_workgroup_memory_explicit_layout"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_xcb_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_xlib_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_KHR_zero_initialize_workgroup_memory"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_MVK_ios_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_MVK_macos_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NN_vi_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_acquire_winrt_display"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_EXT_direct_mode_display")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_clip_space_w_scaling"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_compute_shader_derivatives"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_cooperative_matrix"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_corner_sampled_image"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_coverage_reduction_mode"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_NV_framebuffer_mixed_samples")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_dedicated_allocation"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_dedicated_allocation_image_aliasing"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_dedicated_allocation")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_device_diagnostic_checkpoints"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_device_diagnostics_config"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_device_generated_commands"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[crate::cstr!("VK_KHR_buffer_device_address")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_external_memory"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_NV_external_memory_capabilities")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_external_memory_capabilities"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_external_memory_rdma"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_external_memory")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_external_memory_win32"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_NV_external_memory")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_fill_rectangle"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_fragment_coverage_to_color"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_fragment_shader_barycentric"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_fragment_shading_rate_enums"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_fragment_shading_rate")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_framebuffer_mixed_samples"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_geometry_shader_passthrough"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_glsl_shader"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_inherited_viewport_scissor"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_linear_color_attachment"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_mesh_shader"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_optical_flow"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_format_feature_flags2"),
            crate::cstr!("VK_KHR_synchronization2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_present_barrier"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_surface"),
            crate::cstr!("VK_KHR_get_surface_capabilities2"),
            crate::cstr!("VK_KHR_swapchain"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_ray_tracing"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_KHR_get_memory_requirements2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_ray_tracing_motion_blur"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_ray_tracing_pipeline")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_representative_fragment_test"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_sample_mask_override_coverage"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_scissor_exclusive"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_shader_image_footprint"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_shader_sm_builtins"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_shader_subgroup_partitioned"),
        instance: false,
        core_version: crate::vk11::API_VERSION_1_1,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_shading_rate_image"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_viewport_array2"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_viewport_swizzle"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NV_win32_keyed_mutex"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_NV_external_memory_win32")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NVX_binary_import"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NVX_image_view_handle"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_NVX_multiview_per_view_attributes"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_multiview")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_fragment_density_map_offset"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_get_physical_device_properties2"),
            crate::cstr!("VK_EXT_fragment_density_map"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_image_processing"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_format_feature_flags2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_render_pass_shader_resolve"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_render_pass_store_ops"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_render_pass_transform"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_KHR_surface"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_rotated_copy_commands"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[
            crate::cstr!("VK_KHR_swapchain"),
            crate::cstr!("VK_KHR_copy_commands2"),
        ],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QCOM_tile_properties"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_QNX_screen_surface"),
        instance: true,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_surface")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_SEC_amigo_profiling"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_get_physical_device_properties2")],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_VALVE_descriptor_set_host_mapping"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[],
    },
    ExtensionMetadata {
        name: crate::cstr!("VK_VALVE_mutable_descriptor_type"),
        instance: false,
        core_version: crate::vk10::API_VERSION_1_0,
        requires_extensions: &[crate::cstr!("VK_KHR_maintenance3")],
    },
];
